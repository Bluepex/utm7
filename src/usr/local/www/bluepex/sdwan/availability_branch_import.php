<?php
/* ====================================================================
 * Copyright (C) BluePex Security Solutions - All rights reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Bruno B. Stein <bruno.stein@bluepex.com>, 2015
 *
 * ====================================================================
 *
 */

require_once("guiconfig.inc");
require_once("globals.inc");
require_once("openvpn.inc");
require_once("pfsense-utils.inc");
require_once("pkg-utils.inc");

$input_errors = array();
$bgpd_groups = &$config['installedpackages']['openbgpdgroups']['config'][];
$bgpd_config = &$config['installedpackages']['openbgpd']['config'][0];
$bgpd_neighbors = &$config['installedpackages']['openbgpdneighbors']['config'];

init_config_arr(array('openvpn', 'openvpn-client'));

$a_client = &$config['openvpn']['openvpn-client']; 

if (!is_package_installed("frr")) {
	$input_errors[] = dgettext("SD-WAN", gettext("OpenBGP package is not installed!"));
}

if (isset($_POST['submitconf'])) {
	if (!empty($_FILES)) {
        	$namefile = $_FILES['conffile']['name'];
		$tmpnamefile = $_FILES['conffile']['tmp_name'];
		$type = $_FILES['conffile']['type'];

		if (preg_match("/^text\/xml/",$type)) {
			if (move_uploaded_file($tmpnamefile, "/tmp/{$namefile}"))
				$section_xml = parse_xml_config("/tmp/{$namefile}", $g["xml_rootobj"]);
		} else {
			$input_errors[] = dgettext("SD-WAN", gettext("Select the XML file generated by Server!"));
		}
	} else {
		$input_errors[] = dgettext("SD-WAN", gettext("Select the XML file generated by Server!"));
	}
}

if (isset($_POST['save'], $_POST['filename'])) {
	$namefile = $_POST['filename'];

	$config_client = parse_xml_config("/tmp/" . $namefile, $g["xml_rootobj"]);
	$total = count($config_client["openvpn-client"]);

	for ($i=0; $i < $total; $i++)
		list($config_client["openvpn-client"][$i]['interface'], $config_client["openvpn-client"][$i]['ipaddr']) = explode ("|", $_POST['interface'][$i]);

	foreach ($config_client["openvpn-client"] as $openvpnclient) {
		$portused = openvpn_port_used("UDP", $openvpnclient['interface'],  $openvpnclient['local_port']);
                if ($portused != 0) {
                        $input_errors[] = dgettext("SD-WAN", gettext("The specified 'Local port'") . " {$openvpnclient['local_port']} ".  gettext("is in use."));
		} else {
			openvpn_resync('client', $openvpnclient);
			$a_client[] = $openvpnclient;
		}
	}
	if (empty($bgpd_config['asnum'])) {
		$network = $config['interfaces']['lan']['ipaddr']."/".$config['interfaces']['lan']['subnet'];
		$config_client['installedpackages']['openbgpd']['config'][0]['row'] = array(array("networks" =>  $network));
		$bgpd_config = $config_client['installedpackages']['openbgpd']['config'][0];
	}

	$bgpd_groups = $config_client['installedpackages']['openbgpdgroups']['config'][0];

	foreach ($config_client['installedpackages']['openbgpdneighbors']['config'] as $neighbor)
		$bgpd_neighbors[] = $neighbor;

	if (!$input_errors) {
		write_config("Writing OpenVpn Client config...");
		$savemsg = dgettext("SD-WAN", gettext("Client config XML file imported successfully!"));
		unlink_if_exists("/tmp/{$namefile}");
	}
}

function association_table($section_xml) {
	$interfaces = openvpn_build_if_list();
	$table = "<table class='table' style='width:500px'>";
	$table .= "<thead>";
	$table .= "<tr>";
	$table .= "<th>" . dgettext("SD-WAN", gettext("Tunnel")) . "</th>";
	$table .= "<th>" . dgettext("SD-WAN", gettext("Interface Matriz")) . "</th>";
	$table .= "<th>" . dgettext("SD-WAN", gettext("Interface Client")) . "</th>";
	$table .= "</th>";
	$table .= "</thead>";
	$table .= "<tbody>";
	$vpn = 1;
	foreach ($section_xml["openvpn-client"] as $i => $openvpn_client) {
		$table .= "<tr>";
		$table .= "<td>" . $vpn . "</td>";
		$table .= "<td><b>{$openvpn_client['interface']}</b>";
		$table .= "<td>";
		$table .= "<select name='interface[" . $i . "]' class='form-control'>";
		foreach ($interfaces as $iface => $ifacename) {
			$table .= "<option value='" . $iface . "'>" . $ifacename . "</option>";
		}
		$table .= "</select>";
		$table .= "</td>";
		$table .= "</tr>";
		$vpn++;
	}
	$table .= "</tbody>";
	$table .= "</table>";
	return $table;
}

$pgtitle = array(dgettext("SD-WAN", "SD-WAN"), dgettext("SD-WAN", gettext("Client XML Import")));
include("head.inc");

if ($input_errors)
	print_input_errors($input_errors);
if ($savemsg)
	print_info_box($savemsg);

$tab_array = array();
$tab_array[] = array(dgettext("SD-WAN", gettext("Routes Status")), false, "availability_branch_status.php");
$tab_array[] = array(dgettext("SD-WAN", gettext("Server")), false, "availability_branch.php");
$tab_array[] = array(dgettext("SD-WAN", gettext("Client XML Import")), true, "availability_branch_import.php");
display_top_tabs($tab_array);

$form = new Form(false);
$form->setMultipartEncoding();

$section = new Form_Section(gettext("Import Client Config"));

$section->addInput(new Form_Input(
	'conffile',
	dgettext("SD-WAN", gettext("Select file")),
	'file'
))->setHelp(dgettext("SD-WAN", gettext("Select the client config xml file.")));

if (isset($section_xml)) {
	$section->addInput(new Form_StaticText(
		dgettext('SD-WAN', gettext('Association (Interface)')),
		association_table($section_xml)
	));
	$section->addInput(new Form_Input(
		'filename',
		'',
		'hidden',
		$namefile
	));
	$form->addGlobal(new Form_Button(
		'save',
		dgettext('SD-WAN', gettext('Save'))
	));
} else {
	$form->addGlobal(new Form_Button(
		'submitconf',
		dgettext('SD-WAN', gettext('Import'))
	));
}

$form->add($section);

print $form;
include("foot.inc");
